{"version":3,"sources":["webpack:///webpack/bootstrap 17bf12deff0982de7161","webpack:///./ts/svd-worker.ts","webpack:///./ts/svd-worker-protocol.ts"],"names":[],"mappings":"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","file":"./build/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 17bf12deff0982de7161\n **/","/// <reference path=\"../typings/globals/emscripten/index.d.ts\" />\n/// <reference path=\"../node_modules/typescript/lib/lib.webworker.d.ts\" />\n\nimport protocol = require('./svd-worker-protocol');\n\nimportScripts('../build/clapack.js');\n\nlet input: {\n  a: Float64Array,\n  m: number,\n  n: number\n};\n\nthis.onmessage = function(msg: any) {\n  var data = msg.data as protocol.WorkerReq;\n  if (data.msg === protocol.setInputCmd) {\n    const args = data as protocol.SetInputReq;\n    input = { a: new Float64Array(args.a), m: args.m, n: args.n };\n  } else if (data.msg === protocol.computeSVDCmd) {\n    const args = data as protocol.ComputeSVDReq;\n    if (!input) { throw new Error('set-input must come first!'); }\n    svd(input.a, input.m, input.n, args.approx);\n  } else {\n    throw new Error('unrecognized command!');\n  }\n};\n\ntype ptr = number;\n\nconst svd_simple: (m: number, n: number, A: ptr, U: ptr, S: ptr, Vt: ptr) => number =\n  Module.cwrap('svd_simple', 'number', ['number', 'number', 'number', 'number', 'number', 'number']);\nconst svd_simple_approx: (m: number, n: number, t: number, A: ptr, U: ptr, S: ptr, Vt: ptr) => number =\n  Module.cwrap('svd_simple_approx', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n\nfunction svd (a, m, n, approx) {\n  const d = approx ? Math.min(Math.min(m, n), 50) : Math.min(m, n);\n  const sizeof_double = 8;\n  const buf = Module.HEAPU8.buffer;\n\n  const ptr_a  = Module._malloc(m * n * sizeof_double);\n  const arr_a  = new Float64Array(buf, ptr_a, m * n);\n  const ptr_u  = Module._malloc(m * d * sizeof_double);\n  const arr_u  = new Float64Array(buf, ptr_u, m * d);\n  const ptr_s  = Module._malloc(d *     sizeof_double);\n  const arr_s  = new Float64Array(buf, ptr_s, d);\n  const ptr_vt = Module._malloc(d * n * sizeof_double);\n  const arr_vt = new Float64Array(buf, ptr_vt, d * n);\n\n  for (let i = 0; i < a.length; i++) { arr_a[i] = a[i]; }\n\n  const timerName = \"svd\" + (Math.round(Math.random() * 100)) + \" approx:\" + (approx ? \"yes\" : \"no\");\n  console.time(timerName);\n  if (approx) {\n    svd_simple_approx(m, n, d, ptr_a, ptr_u, ptr_s, ptr_vt);\n  } else {\n    svd_simple(m, n, ptr_a, ptr_u, ptr_s, ptr_vt);\n  }\n  console.timeEnd(timerName);\n  \n  const svd: protocol.WorkerRes = { u: arr_u, s: arr_s, vt: arr_vt, d: d, m: m, n: n };\n  postMessage(svd);\n  \n  Module._free(ptr_a);\n  Module._free(ptr_u);\n  Module._free(ptr_s);\n  Module._free(ptr_vt);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ts/svd-worker.ts\n **/","import types = require('./types');\n\ninterface BaseReq {\n  msg: string\n}\n\nexport interface SetInputArgs {\n  m: number;\n  n: number;\n  a: ArrayBuffer;\n}\n\nexport type SetInputReq = BaseReq & SetInputArgs;\n\nexport const setInputCmd = 'set-input';\n\nexport function makeSetInputReq(args: SetInputArgs): SetInputReq {\n  return {\n    msg: setInputCmd,\n    a: args.a,\n    m: args.m,\n    n: args.n\n  };\n}\n\ninterface ComputeSVDArgs {\n    approx: boolean;\n}\n\nexport type ComputeSVDReq = BaseReq & ComputeSVDArgs;\n\nexport const computeSVDCmd = 'compute-svd';\n\nexport function makeComputeSVDReq(args: ComputeSVDArgs): ComputeSVDReq {\n  return {\n    msg: computeSVDCmd,\n    approx: args.approx\n  };\n}\n\nexport type WorkerReq = SetInputReq | ComputeSVDReq;\n\nexport type SVDRes = types.SVD64;\n\nexport type WorkerRes = SVDRes;\n\n\n/** WEBPACK FOOTER **\n ** ./ts/svd-worker-protocol.ts\n **/"],"sourceRoot":""}